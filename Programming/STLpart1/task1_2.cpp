#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
using namespace std;

int X;
bool del(int x)
{
    return x % X == 0;
};

int main()
{
    setlocale(LC_ALL, "russian");

    // –í –ø–µ—Ä–≤–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫—Ä–∞—Ç–Ω—ã–µ ùëã.
    int n; // —Ä–∞–∑–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
    cout << "n = ";
    cin >> n;
    cout << "X = "; // –∫—Ä–∞—Ç–Ω–æ–µ —á–∏—Å–ª–æ
    cin >> X;

    vector<int> vec, vec2; // —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    int x;
    for (int i = 0; i < n; i++)
    {
        cout << "a[" << i << "] = ";
        cin >> x;
        vec.push_back(x);
    }

    cout << "–ü–µ–≤—Ä—ã–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec.begin(); iter != vec.end(); iter++) // –≤—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }

    vector<int>::iterator it = remove_if(vec.begin(), vec.end(), del); // —É–¥–∞–ª–µ–Ω–∏–µ –∫—Ä–∞—Ç–Ω—ã—Ö –•
    vec.erase(it, vec.end());

    cout << "–ü–µ—Ä–≤—ã–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec.begin(); iter != vec.end(); iter++) // –≤—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }

    // –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
    sort(vec.begin(), vec.end());

    cout << "–ü–µ—Ä–≤—ã–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec.begin(); iter != vec.end(); iter++) // –≤—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }

    // –í–æ –≤—Ç–æ—Ä–æ–π ‚Äî –∑–∞–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –ø–æ–ø–∞–¥–∞—é—â–∏–µ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª [ùëé, ùëè] —á–∏—Å–ª–æ–º ùëå
    int n1; // —Ä–∞–∑–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
    cout << endl
         << "n1 = ";
    cin >> n1;
    int Y; // —á–∏—Å–ª–æ, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∑–∞–º–µ–Ω–∏—Ç—å
    cout << "Y = ";
    cin >> Y;
    cout << "[a,b] = "; // –í–≤–æ–¥ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    int a, b;
    cin >> a >> b;

    vector<int> vec1; // —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    int x1;
    for (int i = 0; i < n1; i++)
    {
        cout << "a[" << i << "] = ";
        cin >> x1;
        vec1.push_back(x1);
    }

    cout << "–í—Ç–æ—Ä–æ–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec1.begin(); iter != vec1.end(); iter++) // –≤—ã–≤–æ–¥ –≤—Ç–æ—Ä–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }

    for (int i = a; i <= b; i++)
    {
        replace( // –∑–∞–º–µ–Ω–∞
            vec1.begin(), vec1.end(), vec1[i], Y);
    }

    cout << "–í—Ç–æ—Ä–æ–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec1.begin(); iter != vec1.end(); iter++) // –≤—ã–≤–æ–¥ –≤—Ç–æ—Ä–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }

    sort(vec1.begin(), vec1.end());

    cout << "–í—Ç–æ—Ä–æ–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec1.begin(); iter != vec1.end(); iter++) // –≤—ã–≤–æ–¥ –≤—Ç–æ—Ä–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }

    // –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –≤ –æ–¥–Ω—É –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
    merge(vec.begin(), vec.end(), vec1.begin(), vec1.end(), inserter(vec2, vec2.end()));

    cout << "–§–∏–Ω–∞–ª—å–Ω—ã–π –≤–µ–∫—Ç–æ—Ä: ";
    for (vector<int>::iterator iter = vec2.begin(); iter != vec2.end(); iter++) // –≤—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
    {
        cout << *iter << " ";
    }
}